$date
	Fri Apr 27 11:38:08 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module simcpu $end
$var wire 16 ! DA [15:0] $end
$var wire 16 " DD [15:0] $end
$var wire 16 # IA [15:0] $end
$var wire 1 $ RW $end
$var reg 1 % CK $end
$var reg 16 & DDi [15:0] $end
$var reg 16 ' ID [15:0] $end
$var reg 1 ( RST $end
$scope module c $end
$var wire 16 ) ABUS [15:0] $end
$var wire 16 * BBUS [15:0] $end
$var wire 16 + CBUS [15:0] $end
$var wire 1 , CK $end
$var wire 16 - DA [15:0] $end
$var wire 16 . DD [15:0] $end
$var wire 16 / IA [15:0] $end
$var wire 16 0 ID [15:0] $end
$var wire 8 1 IMM [7:0] $end
$var wire 4 2 OPCODE [3:0] $end
$var wire 4 3 OPR1 [3:0] $end
$var wire 4 4 OPR2 [3:0] $end
$var wire 4 5 OPR3 [3:0] $end
$var wire 16 6 PCn [15:0] $end
$var wire 16 7 RF01 [15:0] $end
$var wire 16 8 RF05 [15:0] $end
$var wire 1 9 RST $end
$var reg 1 : FLAG $end
$var reg 16 ; FUA [15:0] $end
$var reg 16 < FUB [15:0] $end
$var reg 16 = FUC [15:0] $end
$var reg 16 > INST [15:0] $end
$var reg 16 ? LSUA [15:0] $end
$var reg 16 @ LSUB [15:0] $end
$var reg 16 A LSUC [15:0] $end
$var reg 16 B PC [15:0] $end
$var reg 16 C PCC [15:0] $end
$var reg 16 D PCI [15:0] $end
$var reg 1 E RW $end
$var reg 2 F STAGE [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx F
xE
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
09
bz 8
bz 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
0,
bx +
bx *
bx )
0(
bx '
bx &
0%
x$
bx #
bx "
bx !
$end
#5
1(
19
#10
b1 6
1E
1$
b0 F
b0 B
b0 #
b0 /
1%
1,
#20
b1100000000000000 '
b1100000000000000 0
0%
0,
#30
1%
1,
#40
0%
0,
#50
1%
1,
#60
0%
0,
#70
1%
1,
#80
0%
0,
#90
1%
1,
#100
0%
0,
#105
0(
09
#110
b0 +
b0 )
b0 *
b1100 2
b0 3
b0 4
b0 5
b0 1
b1 F
b1100000000000000 >
1%
1,
#120
0%
0,
#130
b10 F
b1 D
1%
1,
#140
0%
0,
#150
b11 F
1%
1,
#160
0%
0,
#170
b10 6
b0 F
b1 B
b1 #
b1 /
1%
1,
#180
b1100000100000001 '
b1100000100000001 0
0%
0,
#190
b1 +
bx *
b1 3
b1 5
b1 1
b1 F
b1100000100000001 >
1%
1,
#200
0%
0,
#210
b10 F
b10 D
1%
1,
#220
0%
0,
#230
b11 F
1%
1,
#240
0%
0,
#250
b11 6
b1 *
b0 F
b10 B
b10 #
b10 /
b1 7
1%
1,
#260
b1100001000000010 '
b1100001000000010 0
0%
0,
#270
b10 +
bx *
b10 3
b10 5
b10 1
b1 F
b1100001000000010 >
1%
1,
#280
0%
0,
#290
b10 F
b11 D
1%
1,
#300
0%
0,
#310
b11 F
1%
1,
#320
0%
0,
#330
b100 6
b10 *
b0 F
b11 B
b11 #
b11 /
1%
1,
#340
b1100001100000011 '
b1100001100000011 0
0%
0,
#350
b11 +
bx *
b11 3
b11 5
b11 1
b1 F
b1100001100000011 >
1%
1,
#360
0%
0,
#370
b10 F
b100 D
1%
1,
#380
0%
0,
#390
b11 F
1%
1,
#400
0%
0,
#410
b101 6
b11 *
b0 F
b100 B
b100 #
b100 /
1%
1,
#420
b1100010000000100 '
b1100010000000100 0
0%
0,
#430
b100 +
bx *
b100 3
b100 5
b100 1
b1 F
b1100010000000100 >
1%
1,
#440
0%
0,
#450
b10 F
b101 D
1%
1,
#460
0%
0,
#470
b11 F
1%
1,
#480
0%
0,
#490
b110 6
b100 *
b0 F
b101 B
b101 #
b101 /
1%
1,
#500
b10100010011 '
b10100010011 0
0%
0,
#510
bx +
b1 )
b11 *
b0 2
b101 3
b1 4
b11 5
b10011 1
b1 F
b10100010011 >
1%
1,
#520
0%
0,
#530
b10 F
b11 <
b1 ;
b110 D
1%
1,
#540
0%
0,
#550
b100 +
b11 F
b100 =
1%
1,
#560
0%
0,
#570
b111 6
b0 F
b110 B
b110 #
b110 /
b100 8
0:
1%
1,
#580
b1010000001010000 '
b1010000001010000 0
0%
0,
#590
bx +
b100 )
b0 *
b1010 2
b0 3
b101 4
b0 5
b1010000 1
b1 F
b1010000001010000 >
1%
1,
#600
0%
0,
#610
b10 F
b0 @
b0 !
b0 -
b100 ?
b111 D
1%
1,
#620
0%
0,
#630
b100 "
b100 .
b11 F
0E
0$
1%
1,
#640
0%
0,
